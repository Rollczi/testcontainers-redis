plugins {
    id 'java'
    id 'java-library'
    id 'java-library-distribution'
    id 'maven-publish'
    id 'signing'
    id 'io.freefair.lombok' version '6.0.0-m2'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'org.jreleaser' version '0.4.0'
}

group = 'com.redislabs'
description = 'Testcontainers Redis'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/redis-developer/registry")
        credentials {
            username = project.findProperty("github.username") ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    implementation 'org.testcontainers:testcontainers:1.15.3-REDISLABS'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.3-REDISLABS'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.2'
    testImplementation 'org.slf4j:slf4j-simple:1.7.30'
    testImplementation 'com.redislabs:mesclun:1.3.3'
}

test {
    useJUnitPlatform()
    testLogging {
        events "failed"
        exceptionFormat "full"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
    }
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Testcontainers Redis'
                description = 'Redis modules for Testcontainers'
                url = 'https://github.com/redis-developer/testcontainers-redis'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jruaux'
                        name = 'Julien Ruaux'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/redis-developer/testcontainers-redis'
                    developerConnection = 'scm:git:git@github.com:redis-developer/testcontainers-redis'
                    url = 'https://github.com/redis-developer/testcontainers-redis'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

def isNonStable = { String version ->
    def nonStableKeyword = ['PREVIEW'].any { it -> version.toUpperCase().contains(it) }
    def stableKeyword = ['RELEASE', 'FINAL', 'GA', 'JRE8'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+([.-]r)?$/
    return nonStableKeyword || (!stableKeyword && !(version ==~ regex))
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

jreleaser {
    project {
        name = 'testcontainers-redis'
        description = 'Testcontainers Redis'
        longDescription = 'Testcontainers extension for Redis, Redis Modules, and Redis Enterprise'
        website = 'https://github.com/redis-developer/testcontainers-redis'
        authors = ['Julien Ruaux']
        tags = ['redis', 'testcontainers']
        license = 'Apache-2.0'
    }
    release {
        github {
            username = 'jruaux'
            owner = 'redis-developer'
            overwrite = true
        }
    }
}
