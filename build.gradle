plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'java-library-distribution'
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'io.freefair.lombok' version '6.0.0-m2'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'org.jreleaser' version '0.4.0'
}

group = 'com.redislabs'
description = 'Testcontainers Redis'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.testcontainers:testcontainers:1.15.3-REDISLABS'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.3-REDISLABS'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.slf4j:slf4j-simple'
    testImplementation 'com.redislabs:mesclun:1.3.3-SNAPSHOT'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

shadowJar {
    archiveClassifier.set('')
    dependencies {
        exclude(dependency('com.fasterxml.jackson.core:jackson-annotations'))
        exclude(dependency('com.github.docker-java:docker-java-api'))
        exclude(dependency('com.github.docker-java:docker-java-transport'))
        exclude(dependency('com.github.docker-java:docker-java-transport-zerodep'))
        exclude(dependency('junit:junit'))
        exclude(dependency('net.java.dev.jna:jna'))
        exclude(dependency('org.apache.commons:commons-compress'))
        exclude(dependency('org.hamcrest:hamcrest-core'))
        exclude(dependency('org.rnorth.duct-tape:duct-tape'))
        exclude(dependency('org.slf4j:slf4j-api'))
    }
}

test {
    useJUnitPlatform()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}

signing {
    sign publishing.publications.shadow
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

def isNonStable = { String version ->
    def nonStableKeyword = ['PREVIEW'].any { it -> version.toUpperCase().contains(it) }
    def stableKeyword = ['RELEASE', 'FINAL', 'GA', 'JRE8'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+([.-]r)?$/
    return nonStableKeyword || (!stableKeyword && !(version ==~ regex))
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

jreleaser {
    project {
        name = 'testcontainers-redis'
        description = 'Testcontainers Redis'
        longDescription = 'Testcontainers extension for Redis, Redis Modules, and Redis Enterprise'
        website = 'https://github.com/redis-developer/testcontainers-redis'
        authors = ['Julien Ruaux']
        tags = ['redis', 'testcontainers']
        license = 'Apache-2.0'
    }
    release {
        github {
            username = 'jruaux'
            owner = 'redis-developer'
            overwrite = true
        }
    }
}
